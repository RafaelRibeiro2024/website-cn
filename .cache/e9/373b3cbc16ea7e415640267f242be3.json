{"id":"node_modules/@opentelemetry/api/build/esm/diag/types.js","dependencies":[{"name":"C:\\Users\\Rafael\\Desktop\\3ºANO\\2ºSEMESTRE\\Computação em Nuvem\\Trabalho\\teste2\\node_modules\\@opentelemetry\\api\\build\\esm\\diag\\types.js.map","includedInParent":true,"mtime":1711411810912},{"name":"C:\\Users\\Rafael\\Desktop\\3ºANO\\2ºSEMESTRE\\Computação em Nuvem\\Trabalho\\teste2\\package.json","includedInParent":true,"mtime":1711413008049},{"name":"C:\\Users\\Rafael\\Desktop\\3ºANO\\2ºSEMESTRE\\Computação em Nuvem\\Trabalho\\teste2\\node_modules\\@opentelemetry\\api\\package.json","includedInParent":true,"mtime":1711411810474}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DiagLogLevel = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nvar DiagLogLevel;\n(function (DiagLogLevel) {\n  /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n  DiagLogLevel[DiagLogLevel[\"NONE\"] = 0] = \"NONE\";\n  /** Identifies an error scenario */\n  DiagLogLevel[DiagLogLevel[\"ERROR\"] = 30] = \"ERROR\";\n  /** Identifies a warning scenario */\n  DiagLogLevel[DiagLogLevel[\"WARN\"] = 50] = \"WARN\";\n  /** General informational log message */\n  DiagLogLevel[DiagLogLevel[\"INFO\"] = 60] = \"INFO\";\n  /** General debug log message */\n  DiagLogLevel[DiagLogLevel[\"DEBUG\"] = 70] = \"DEBUG\";\n  /**\n   * Detailed trace level logging should only be used for development, should only be set\n   * in a development environment.\n   */\n  DiagLogLevel[DiagLogLevel[\"VERBOSE\"] = 80] = \"VERBOSE\";\n  /** Used to set the logging level to include all logging */\n  DiagLogLevel[DiagLogLevel[\"ALL\"] = 9999] = \"ALL\";\n})(DiagLogLevel || (exports.DiagLogLevel = DiagLogLevel = {}));"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/diag/types.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":12},"generated":{"line":27,"column":4}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":27,"column":16}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":0},"generated":{"line":28,"column":1}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":12},"generated":{"line":28,"column":11}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":28,"column":23}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":28,"column":25}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":68,"column":2},"generated":{"line":29,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":30,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":30,"column":14}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":30,"column":15}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":30,"column":27}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":30,"column":28}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":30,"column":34}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":30,"column":35}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":30,"column":38}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":30,"column":39}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":30,"column":40}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":30,"column":43}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":69,"column":10},"generated":{"line":30,"column":49}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":31,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":32,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":32,"column":14}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":32,"column":15}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":32,"column":27}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":32,"column":28}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":32,"column":35}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":32,"column":36}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":32,"column":39}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":32,"column":41}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":32,"column":42}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":32,"column":45}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":72,"column":12},"generated":{"line":32,"column":52}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":74,"column":2},"generated":{"line":33,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":34,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":34,"column":14}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":34,"column":15}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":34,"column":27}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":34,"column":28}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":34,"column":34}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":34,"column":35}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":34,"column":38}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":34,"column":40}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":34,"column":41}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":34,"column":44}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":75,"column":11},"generated":{"line":34,"column":50}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":35,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":36,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":36,"column":14}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":36,"column":15}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":36,"column":27}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":36,"column":28}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":36,"column":34}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":36,"column":35}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":36,"column":38}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":36,"column":40}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":36,"column":41}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":36,"column":44}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":78,"column":11},"generated":{"line":36,"column":50}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":37,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":38,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":38,"column":14}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":38,"column":15}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":38,"column":27}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":38,"column":28}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":38,"column":35}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":38,"column":36}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":38,"column":39}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":38,"column":41}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":38,"column":42}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":38,"column":45}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":81,"column":12},"generated":{"line":38,"column":52}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":83,"column":2},"generated":{"line":39,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":43,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":43,"column":14}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":43,"column":15}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":43,"column":27}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":43,"column":28}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":43,"column":37}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":43,"column":38}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":43,"column":41}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":43,"column":43}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":43,"column":44}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":43,"column":47}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":87,"column":14},"generated":{"line":43,"column":56}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":89,"column":2},"generated":{"line":44,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":45,"column":2}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":45,"column":14}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":45,"column":15}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":45,"column":27}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":45,"column":28}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":45,"column":33}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":45,"column":34}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":45,"column":37}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":45,"column":41}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":45,"column":42}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":45,"column":45}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":90,"column":12},"generated":{"line":45,"column":50}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":91,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":46,"column":1}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":12},"generated":{"line":46,"column":3}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":46,"column":15}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":46,"column":20}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":46,"column":27}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":46,"column":28}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":46,"column":40}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":12},"generated":{"line":46,"column":43}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":46,"column":55}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":46,"column":58}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":46,"column":59}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":46,"column":60}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":46,"column":61}},{"source":"../../../src/diag/types.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":46,"column":62}}],"sources":{"../../../src/diag/types.ts":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type DiagLogFunction = (message: string, ...args: unknown[]) => void;\n\n/**\n * Defines an internal diagnostic logger interface which is used to log internal diagnostic\n * messages, you can set the default diagnostic logger via the {@link DiagAPI} setLogger function.\n * API provided implementations include :-\n * - a No-Op {@link createNoopDiagLogger}\n * - a {@link DiagLogLevel} filtering wrapper {@link createLogLevelDiagLogger}\n * - a general Console {@link DiagConsoleLogger} version.\n */\nexport interface DiagLogger {\n  /** Log an error scenario that was not expected and caused the requested operation to fail. */\n  error: DiagLogFunction;\n\n  /**\n   * Log a warning scenario to inform the developer of an issues that should be investigated.\n   * The requested operation may or may not have succeeded or completed.\n   */\n  warn: DiagLogFunction;\n\n  /**\n   * Log a general informational message, this should not affect functionality.\n   * This is also the default logging level so this should NOT be used for logging\n   * debugging level information.\n   */\n  info: DiagLogFunction;\n\n  /**\n   * Log a general debug message that can be useful for identifying a failure.\n   * Information logged at this level may include diagnostic details that would\n   * help identify a failure scenario.\n   * For example: Logging the order of execution of async operations.\n   */\n  debug: DiagLogFunction;\n\n  /**\n   * Log a detailed (verbose) trace level logging that can be used to identify failures\n   * where debug level logging would be insufficient, this level of tracing can include\n   * input and output parameters and as such may include PII information passing through\n   * the API. As such it is recommended that this level of tracing should not be enabled\n   * in a production environment.\n   */\n  verbose: DiagLogFunction;\n}\n\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport enum DiagLogLevel {\n  /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n  NONE = 0,\n\n  /** Identifies an error scenario */\n  ERROR = 30,\n\n  /** Identifies a warning scenario */\n  WARN = 50,\n\n  /** General informational log message */\n  INFO = 60,\n\n  /** General debug log message */\n  DEBUG = 70,\n\n  /**\n   * Detailed trace level logging should only be used for development, should only be set\n   * in a development environment.\n   */\n  VERBOSE = 80,\n\n  /** Used to set the logging level to include all logging */\n  ALL = 9999,\n}\n\n/**\n * Defines options for ComponentLogger\n */\nexport interface ComponentLoggerOptions {\n  namespace: string;\n}\n\nexport interface DiagLoggerOptions {\n  /**\n   * The {@link DiagLogLevel} used to filter logs sent to the logger.\n   *\n   * @defaultValue DiagLogLevel.INFO\n   */\n  logLevel?: DiagLogLevel;\n\n  /**\n   * Setting this value to `true` will suppress the warning message normally emitted when registering a logger when another logger is already registered.\n   */\n  suppressOverrideMessage?: boolean;\n}\n\nexport interface DiagLoggerApi {\n  /**\n   * Set the global DiagLogger and DiagLogLevel.\n   * If a global diag logger is already set, this will override it.\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param options - A {@link DiagLoggerOptions} object. If not provided, default values will be set.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, options?: DiagLoggerOptions): boolean;\n\n  /**\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param logLevel - The {@link DiagLogLevel} used to filter logs sent to the logger. If not provided it will default to {@link DiagLogLevel.INFO}.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, logLevel?: DiagLogLevel): boolean;\n}\n"},"lineCount":null}},"error":null,"hash":"e7a7ea744f0892fb972143345ce7d08b","cacheData":{"env":{}}}