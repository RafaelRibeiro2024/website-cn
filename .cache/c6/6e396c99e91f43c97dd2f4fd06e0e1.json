{"id":"node_modules/@opentelemetry/api/build/esm/diag-api.js","dependencies":[{"name":"C:\\Users\\Rafael\\Desktop\\3ºANO\\2ºSEMESTRE\\Computação em Nuvem\\Trabalho\\teste2\\node_modules\\@opentelemetry\\api\\build\\esm\\diag-api.js.map","includedInParent":true,"mtime":1711411810553},{"name":"C:\\Users\\Rafael\\Desktop\\3ºANO\\2ºSEMESTRE\\Computação em Nuvem\\Trabalho\\teste2\\package.json","includedInParent":true,"mtime":1711460231753},{"name":"C:\\Users\\Rafael\\Desktop\\3ºANO\\2ºSEMESTRE\\Computação em Nuvem\\Trabalho\\teste2\\node_modules\\@opentelemetry\\api\\package.json","includedInParent":true,"mtime":1711411810474},{"name":"./api/diag","loc":{"line":18,"column":24,"index":739},"parent":"C:\\Users\\Rafael\\Desktop\\3ºANO\\2ºSEMESTRE\\Computação em Nuvem\\Trabalho\\teste2\\node_modules\\@opentelemetry\\api\\build\\esm\\diag-api.js","resolved":"C:\\Users\\Rafael\\Desktop\\3ºANO\\2ºSEMESTRE\\Computação em Nuvem\\Trabalho\\teste2\\node_modules\\@opentelemetry\\api\\build\\esm\\api\\diag.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diag = void 0;\nvar _diag = require(\"./api/diag\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\n\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nvar diag = exports.diag = _diag.DiagAPI.instance();"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/diag-api.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":7,"column":0}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":7,"column":4}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":7,"column":9}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":7,"column":12}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":7,"column":19}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":23,"column":0}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":24,"column":0}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":26,"column":0}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":7},"generated":{"line":32,"column":0}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":32,"column":4}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":17},"generated":{"line":32,"column":8}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":17},"generated":{"line":32,"column":11}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":17},"generated":{"line":32,"column":18}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":17},"generated":{"line":32,"column":19}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":17},"generated":{"line":32,"column":23}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":32,"column":26}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":27},"generated":{"line":32,"column":39}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":28},"generated":{"line":32,"column":40}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":36},"generated":{"line":32,"column":48}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":36},"generated":{"line":32,"column":49}},{"source":"../../src/diag-api.ts","name":null,"original":{"line":26,"column":38},"generated":{"line":32,"column":50}}],"sources":{"../../src/diag-api.ts":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport const diag = DiagAPI.instance();\n"},"lineCount":null}},"error":null,"hash":"089bf7361c9bb1f0b8f4d8f9941fc216","cacheData":{"env":{}}}