{"id":"node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js","dependencies":[{"name":"C:\\Users\\Rafael\\Desktop\\3ºANO\\2ºSEMESTRE\\Computação em Nuvem\\Trabalho\\teste2\\node_modules\\@opentelemetry\\api\\build\\esm\\trace\\SamplingResult.js.map","includedInParent":true,"mtime":1711411810765},{"name":"C:\\Users\\Rafael\\Desktop\\3ºANO\\2ºSEMESTRE\\Computação em Nuvem\\Trabalho\\teste2\\package.json","includedInParent":true,"mtime":1711460231753},{"name":"C:\\Users\\Rafael\\Desktop\\3ºANO\\2ºSEMESTRE\\Computação em Nuvem\\Trabalho\\teste2\\node_modules\\@opentelemetry\\api\\package.json","includedInParent":true,"mtime":1711411810474}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SamplingDecision = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nvar SamplingDecision;\n(function (SamplingDecision) {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (exports.SamplingDecision = SamplingDecision = {}));"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":12},"generated":{"line":27,"column":4}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":27,"column":20}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":28,"column":1}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":12},"generated":{"line":28,"column":11}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":28,"column":27}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":28,"column":29}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":29,"column":2}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":33,"column":2}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":33,"column":18}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":33,"column":19}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":33,"column":35}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":33,"column":36}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":33,"column":48}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":33,"column":49}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":33,"column":52}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":33,"column":53}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":33,"column":54}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":33,"column":57}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":30,"column":12},"generated":{"line":33,"column":69}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":34,"column":2}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":2}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":18}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":19}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":35}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":36}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":44}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":45}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":48}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":49}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":50}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":53}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":35,"column":8},"generated":{"line":38,"column":61}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":39,"column":2}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":43,"column":2}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":43,"column":18}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":43,"column":19}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":43,"column":35}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":43,"column":36}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":43,"column":56}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":43,"column":57}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":43,"column":60}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":43,"column":61}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":43,"column":62}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":43,"column":65}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":40,"column":20},"generated":{"line":43,"column":85}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":41,"column":1},"generated":{"line":44,"column":1}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":12},"generated":{"line":44,"column":3}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":44,"column":19}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":44,"column":24}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":44,"column":31}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":44,"column":32}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":44,"column":48}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":12},"generated":{"line":44,"column":51}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":44,"column":67}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":44,"column":70}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":44,"column":71}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":44,"column":72}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":44,"column":73}},{"source":"../../../src/trace/SamplingResult.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":44,"column":74}}],"sources":{"../../../src/trace/SamplingResult.ts":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanAttributes } from './attributes';\nimport { TraceState } from './trace_state';\n\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport enum SamplingDecision {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  NOT_RECORD,\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  RECORD,\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  RECORD_AND_SAMPLED,\n}\n\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling result contains a decision for a {@link Span} and additional\n * attributes the sampler would like to added to the Span.\n */\nexport interface SamplingResult {\n  /**\n   * A sampling decision, refer to {@link SamplingDecision} for details.\n   */\n  decision: SamplingDecision;\n  /**\n   * The list of attributes returned by SamplingResult MUST be immutable.\n   * Caller may call {@link Sampler}.shouldSample any number of times and\n   * can safely cache the returned value.\n   */\n  attributes?: Readonly<SpanAttributes>;\n  /**\n   * A {@link TraceState} that will be associated with the {@link Span} through\n   * the new {@link SpanContext}. Samplers SHOULD return the TraceState from\n   * the passed-in {@link Context} if they do not intend to change it. Leaving\n   * the value undefined will also leave the TraceState unchanged.\n   */\n  traceState?: TraceState;\n}\n"},"lineCount":null}},"error":null,"hash":"41b3ee7f51bd8ee281979f0ed81a1bc0","cacheData":{"env":{}}}